{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","components/BandAdd.js","components/BandList.js","components/ChartBands.js","hooks/useGrafico.js","App.js","BandsApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","server","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","BandAdd","setValue","useContext","className","onSubmit","e","preventDefault","trim","length","emit","htmlFor","type","onChange","target","BandList","bandas","setBandas","data","off","map","id","name","votes","onClick","b","onBlur","nombre","Chart","register","registerables","ChartBands","useGrafico","ctx","document","getElementById","myChart","labels","da","datasets","label","backgroundColor","borderColor","borderWidth","animation","options","scales","x","beginAtZero","stacked","1","grid","color","indexAxis","destroy","App","BandsApp","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2568414c.chunk.js","sourcesContent":["import React,{ createContext } from \"react\";\nimport { useSocket } from \"../hooks/useSocket\";\n\n\nconst SocketContext = createContext();\n\nconst SocketProvider = ({children})=>{\n\n    const { socket, online }=useSocket('https://graficas-bandas.herokuapp.com');\n    \n    return (\n        <SocketContext.Provider value={{socket, online}}>\n            { children }\n        </SocketContext.Provider>\n    );\n}\n\nexport {\n    SocketProvider,\n    SocketContext\n}","import { useEffect, useMemo, useState } from \"react\";\nimport io from 'socket.io-client';\n\nexport const useSocket = (server) => {\n    \n    \n    const socket = useMemo( ()=> io.connect( server, {\n        transports: ['websocket']\n    }), [server]);\n    \n    const [online, setOnline] = useState(false);\n\n    useEffect(() => {\n        setOnline(socket.connected)\n    }, [socket]);\n\n    useEffect(() => {\n\n        socket.on('connect', () => {\n            setOnline(true)\n        })\n\n    }, [socket])\n\n    useEffect(() => {\n\n        socket.on('disconnect', () => {\n            setOnline(false)\n        })\n\n    }, [socket]);\n\n\n\n    return{\n        online,\n        socket\n    }\n    \n}\n","import React, { useContext, useState } from 'react'\nimport { SocketContext} from '../context/SocketContext';\n\n\nexport const BandAdd = () => {\n    \n    \n    const [value, setValue] = useState('')\n\n    const{ socket }=useContext(SocketContext)\n\n    const agregar = (e) => {\n        e.preventDefault();\n\n         if( value.trim().length>0 ){\n             \n            socket.emit('nueva_band', value );\n            setValue(\"\")\n         }\n    };\n\n    return (\n        <div className=\"text-black text-center\">\n            <form className=\" p-10\" onSubmit={agregar}>\n                <label htmlFor=\"\" className=\"text-2xl inline-block my-4 text-white\">Agregar una nueva banda</label>\n                <input \n                    type=\"text\" \n                    className=\"w-full rounded p-3 px-4 text-lg\"\n                    value={value}\n                    onChange={(e)=>setValue(e.target.value)}\n                />\n                <button className=\"border-none rounded mt-10 py-4 bg-green-500 w-full text-2xl text-white font-bold hover:bg-green-600\">Add <i className=\"mx-5 fas fa-users\"></i></button>\n            </form>\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { SocketContext } from '../context/SocketContext';\n\nexport const BandList = () => {\n    \n    const{ socket } = useContext(SocketContext)\n    \n    const [bandas, setBandas] = useState([]);\n\n    useEffect(() => {\n        socket.on('current_band_list', (data) => {\n            setBandas(data)\n        })\n        return ()=> socket.off('current_band_list')\n    }, [socket])\n\n    \n    const onChange = (e, id) => {\n        setBandas( bandas.map(b=>{\n            if(b.id === id){\n                b.name = e.target.value;\n            }\n            return b;\n        }));\n    };\n\n    const onBlur = (id, nombre) => {\n        socket.emit('nuevo_nombre', {id, nombre} );\n    };\n\n    \n\n    return (\n        <>\n            {\n                bandas.map(({ id, name, votes }) => (\n                    <div key={id} className=\"p-2 text-center\">\n\n\n                        <div className=\"flex justify-around mb-5\">\n                            <button \n                                className=\"mx-2 flex-auto bg-blue-500 p-3 rounded hover:bg-blue-600\"\n                                onClick={ ()=> socket.emit('votar', id ) }\n\n                            ><i className=\"text-lg far fa-thumbs-up\" ></i></button>\n\n                            <input\n                                type=\"text\"\n                                className=\"mx-2 flex-auto rounded text-black px-4 font-bold\" \n                                value={name} \n                                onChange={(e)=> onChange(e, id)}\n                                onBlur={()=> onBlur(id, name)}\n                            />\n\n                            <div className=\"mx-2 flex flex-col flex-auto\">\n                                <p className=\"\">Votos</p>\n                                <p className=\"font-bold\">{votes}</p>\n                            </div>\n\n                            <button \n                                className=\"mx-2 flex-auto bg-red-500 p-3 rounded hover:bg-red-600\"\n                                onClick={ ()=> socket.emit('borrar', id ) }\n                            ><i className=\"far fa-trash-alt\"></i></button>\n                        </div>\n\n                    </div>\n                ))\n            }\n        </>\n    )\n}\n","import { Chart, registerables } from 'chart.js';\nimport React, { useEffect} from 'react'\nimport { useGrafico } from '../hooks/useGrafico';\n\nChart.register(...registerables);\n\nexport const ChartBands = () => {\n\n    \n    const {bandas: data} = useGrafico();\n\n    useEffect(() => {\n\n        const ctx = document.getElementById('myChart');\n            \n        const myChart = new Chart(ctx, {\n                type: 'bar',\n                data: {\n                    labels: data.map( da => da.name),\n                    datasets: [{\n                        label: '# Votos',\n                        data: data.map( da => da.votes),\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                            'rgba(54, 162, 235, 0.2)',\n                            'rgba(255, 206, 86, 0.2)',\n                            'rgba(75, 192, 192, 0.2)',\n                            'rgba(153, 102, 255, 0.2)',\n                            'rgba(255, 159, 64, 0.2)'\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, .9)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                        borderWidth: 1,\n                        animation: false\n                        \n                    }]\n                },\n                options: {\n                    scales: {\n                        // y: {\n                        //     beginAtZero: true,\n                        // },\n                        x: {\n                            beginAtZero: true,\n                            stacked: true\n                        },\n                        1:{\n                            grid:{\n                                borderColor: 'rgba(255, 255, 255, 1)',\n                                color: 'rgba(255, 255, 255, .0)',\n                            },\n                        }\n                        \n                    },\n                    indexAxis: 'y',\n                }\n        });\n\n        return ()=> {\n           myChart.destroy();\n        }\n    }, [data])\n\n\n   \n\n\n    return (\n        <div className=\"\">\n            <canvas id=\"myChart\"></canvas>\n        </div>\n    )\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { SocketContext } from \"../context/SocketContext\"\n\n\nexport const useGrafico = () => {\n    \n    const { socket } = useContext(SocketContext)\n    const [bandas, setBandas] = useState([])\n\n    useEffect(() => {\n\n        socket.on('current_band_list', (data) => {\n            setBandas(data)\n        })\n        return () => socket.off('current_band_list')\n    \n    }, [socket]);\n\n    return {\n        bandas\n    }\n};","import React, { useContext } from 'react'\n\n\nimport { BandAdd } from './components/BandAdd'\nimport { BandList } from './components/BandList'\nimport { ChartBands } from './components/ChartBands'\nimport { SocketContext } from './context/SocketContext'\n\n\nexport const App = () => {\n    const { online } = useContext(SocketContext);\n\n    return (\n        <>\n            <div className=\"col-12 bg-black bg-opacity-50 text-white p-4 text-xl\">\n                <p className=\"\" >Status client:\n                    {\n                        (online)\n                            ? <span className=\"mx-5 text-green-500 font-bold\">Online 🟢</span>\n                            : <span className=\"mx-5 text-red-500 font-bold\">Offline 🔴</span>\n                    }\n\n                </p>\n            </div>\n            \n            <div className=\"container mx-auto text-white mt-5\">\n                <h2 className=\"ml-2 text-5xl\">Band Names</h2>\n                <hr className=\"my-4\" />\n                <div className=\"grid gap-5 grid-cols-1\">\n\n                    <div className=\" border rounded\">\n                        <BandAdd />\n                    </div>\n\n                    <div className=\" border rounded text-center\">\n                        <label htmlFor=\"\" className=\"text-2xl inline-block my-4 text-white\">Bandas agregadas</label>\n                        <BandList />\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"container mx-auto text-white my-5 text-center\">\n                <label htmlFor=\"\" className=\"text-2xl inline-block my-5 text-white font-bold\">Graficación de votos por banda</label>\n                <div className=\"bg-black rounded p-5 mx-auto \">\n                    <ChartBands />\n                </div>\n            </div>  \n        </>\n    )\n}\n","import React from 'react'\nimport { App } from './App'\nimport { SocketProvider } from './context/SocketContext'\n\nexport const BandsApp = () => {\n    return (\n        <SocketProvider>\n            <App/>   \n        </SocketProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BandsApp } from './BandsApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BandsApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}